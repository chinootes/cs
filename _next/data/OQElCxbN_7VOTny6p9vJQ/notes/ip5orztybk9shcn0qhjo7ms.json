{"pageProps":{"note":{"id":"ip5orztybk9shcn0qhjo7ms","title":"Comparator","desc":"","updated":1727012158881,"created":1727009611672,"custom":{},"fname":"lang.java.lib.interfaces.func.comparator","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"5b635c46809b6cf2a64673ccf6fe7179","links":[{"type":"wiki","from":{"fname":"lang.java.lib.interfaces.func.comparator","id":"ip5orztybk9shcn0qhjo7ms","vaultName":"cs"},"value":"lang.java.lib.interfaces.func.function","position":{"start":{"line":51,"column":22,"offset":1061},"end":{"line":51,"column":64,"offset":1103},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.java.lib.interfaces.func.function"}},{"type":"wiki","from":{"fname":"lang.java.lib.interfaces.func.comparator","id":"ip5orztybk9shcn0qhjo7ms","vaultName":"cs"},"value":"lang.java.lib.interfaces.func.function","position":{"start":{"line":52,"column":22,"offset":1165},"end":{"line":52,"column":64,"offset":1207},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.java.lib.interfaces.func.function"}},{"type":"wiki","from":{"fname":"lang.java.lib.interfaces.func.comparator","id":"ip5orztybk9shcn0qhjo7ms","vaultName":"cs"},"value":"lang.java.lib.collection.comparable","position":{"start":{"line":71,"column":62,"offset":1726},"end":{"line":71,"column":101,"offset":1765},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.java.lib.collection.comparable"}},{"from":{"fname":"lang.java.lib.collection","id":"dkdtvct3q6f8lggmoqrqf43","vaultName":"cs"},"type":"backlink","position":{"start":{"line":184,"column":67,"offset":7711},"end":{"line":184,"column":111,"offset":7755},"indent":[]},"value":"lang.java.lib.interfaces.func.comparator"},{"from":{"fname":"lang.java.lib.collection","id":"dkdtvct3q6f8lggmoqrqf43","vaultName":"cs"},"type":"backlink","position":{"start":{"line":375,"column":131,"offset":17387},"end":{"line":375,"column":175,"offset":17431},"indent":[]},"value":"lang.java.lib.interfaces.func.comparator"},{"from":{"fname":"lang.java.lib.interfaces.streams","id":"baxu095ehryiz9aqa17tpvt","vaultName":"cs"},"type":"backlink","position":{"start":{"line":57,"column":29,"offset":1513},"end":{"line":57,"column":73,"offset":1557},"indent":[]},"value":"lang.java.lib.interfaces.func.comparator"},{"from":{"fname":"lang.java.lib.interfaces.streams","id":"baxu095ehryiz9aqa17tpvt","vaultName":"cs"},"type":"backlink","position":{"start":{"line":144,"column":11,"offset":3624},"end":{"line":144,"column":55,"offset":3668},"indent":[]},"value":"lang.java.lib.interfaces.func.comparator"},{"from":{"fname":"lang.java.lib.interfaces.streams","id":"baxu095ehryiz9aqa17tpvt","vaultName":"cs"},"type":"backlink","position":{"start":{"line":144,"column":68,"offset":3681},"end":{"line":144,"column":112,"offset":3725},"indent":[]},"value":"lang.java.lib.interfaces.func.comparator"}],"anchors":{"definition":{"type":"header","text":"Definition","value":"definition","line":10,"column":0,"depth":2},"usage":{"type":"header","text":"Usage","value":"usage","line":18,"column":0,"depth":2},"default-methods":{"type":"header","text":"Default methods","value":"default-methods","line":42,"column":0,"depth":3}},"children":[],"parent":"6ve3c58109inf3cstapqw2p","data":{}},"body":"<h1 id=\"comparator\">Comparator<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#comparator\"></a></h1>\n<p>Allows to define custom ordering of objects. For example, while sorting.</p>\n<h2 id=\"definition\">Definition<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#definition\"></a></h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> o2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"usage\">Usage<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usage\"></a></h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AgeComparator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Person</span> p2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> p1<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> p2<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> Â  \n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ComparatorExample</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">></span></span> people <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AgeComparator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> p1<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> p2<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"default-methods\">Default methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#default-methods\"></a></h3>\n<p>In addition to the abstract method <code>compare</code>, it also provides a bunch of utility methods to easily define a Comparator.</p>\n<p>For example,</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">></span></span> sortedByAge <span class=\"token operator\">=</span> people<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                 <span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token operator\">::</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                 <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>Here's a list of all such methods:</p>\n<ul>\n<li><strong>static comparing(<a href=\"/cs/notes/gfq63atn6koxm8w8u1nb38b\">Function</a> keyExtractor)</strong>: Like the example above</li>\n<li><strong>static comparing(<a href=\"/cs/notes/gfq63atn6koxm8w8u1nb38b\">Function</a>, Comparator)</strong>: Like the example above but with Comparator for the given key.</li>\n</ul>\n<p>Similar methods but for specific types:</p>\n<ul>\n<li>static comparingDouble</li>\n<li>static comparingInt</li>\n<li>static comparingLong</li>\n</ul>\n<p>Lexicographic order sorting (to be used after the above methods):</p>\n<ul>\n<li>thenComparing</li>\n<li>thenComparingDouble</li>\n<li>thenComparingInt</li>\n<li>thenComparingLong</li>\n</ul>\n<p>Methods for null friendly Comparator</p>\n<ul>\n<li>nullsFirst(Comparator)</li>\n<li>nullsLast(Comparator)</li>\n</ul>\n<p>To modify ordering or comparator: </p>\n<ul>\n<li><strong>static naturalOrder</strong>: returns Comparator which compares <a href=\"/cs/notes/viq09c2pqto5wyy49rlg1o5\">Comparable</a> objects in natural order</li>\n<li>static reverseOrder()</li>\n<li>reversed()</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/cs/notes/dkdtvct3q6f8lggmoqrqf43\">Collection Framework (cs)</a></li>\n<li><a href=\"/cs/notes/baxu095ehryiz9aqa17tpvt\">Streams (cs)</a></li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}