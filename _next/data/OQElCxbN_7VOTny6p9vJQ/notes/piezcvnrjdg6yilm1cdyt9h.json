{"pageProps":{"note":{"id":"piezcvnrjdg6yilm1cdyt9h","title":"Stack Space","desc":"","updated":1713820120476,"created":1713805011532,"custom":{},"fname":"os.memory.ram.user.stack","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"1317d01c6ad631759aaa4eb26c4721b3","links":[{"type":"wiki","from":{"fname":"os.memory.ram.user.stack","id":"piezcvnrjdg6yilm1cdyt9h","vaultName":"cs"},"value":"dev.memory management.alloc.static","position":{"start":{"line":4,"column":12,"offset":69},"end":{"line":4,"column":50,"offset":107},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.memory management.alloc.static"}},{"type":"wiki","from":{"fname":"os.memory.ram.user.stack","id":"piezcvnrjdg6yilm1cdyt9h","vaultName":"cs"},"value":"execution.concurrency.multithreading.thread safety","position":{"start":{"line":8,"column":7,"offset":265},"end":{"line":8,"column":61,"offset":319},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"execution.concurrency.multithreading.thread safety"}},{"type":"wiki","from":{"fname":"os.memory.ram.user.stack","id":"piezcvnrjdg6yilm1cdyt9h","vaultName":"cs"},"value":"dev.issues.error.stack overflow","position":{"start":{"line":33,"column":15,"offset":1223},"end":{"line":33,"column":50,"offset":1258},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.issues.error.stack overflow"}},{"type":"wiki","from":{"fname":"os.memory.ram.user.stack","id":"piezcvnrjdg6yilm1cdyt9h","vaultName":"cs"},"value":"data.structure.secondary.stack","position":{"start":{"line":35,"column":15,"offset":1282},"end":{"line":35,"column":49,"offset":1316},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data.structure.secondary.stack"}},{"type":"wiki","from":{"fname":"os.memory.ram.user.stack","id":"piezcvnrjdg6yilm1cdyt9h","vaultName":"cs"},"value":"os.memory.ram.user.stack.frame","position":{"start":{"line":39,"column":34,"offset":1494},"end":{"line":39,"column":68,"offset":1528},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"os.memory.ram.user.stack.frame"}},{"from":{"fname":"os.memory.management","id":"x7nmks70ns14mh5k96w9aov","vaultName":"cs"},"type":"backlink","position":{"start":{"line":38,"column":41,"offset":1239},"end":{"line":38,"column":69,"offset":1267},"indent":[]},"value":"os.memory.ram.user.stack"},{"from":{"fname":"dev.issues.error.stack overflow","id":"48ezf1ffhdkn2lb6crnk71z","vaultName":"cs"},"type":"backlink","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":2,"column":41,"offset":41},"indent":[]},"value":"os.memory.ram.user.stack"},{"from":{"fname":"lang.java.jre.memory","id":"k83mi3ehud8dj1dey48p9iv","vaultName":"cs"},"type":"backlink","position":{"start":{"line":26,"column":26,"offset":665},"end":{"line":26,"column":54,"offset":693},"indent":[]},"value":"os.memory.ram.user.stack"},{"from":{"fname":"os.memory.ram.user.heap","id":"rcyl8thq38qrnmhzb4oheq6","vaultName":"cs"},"type":"backlink","position":{"start":{"line":4,"column":90,"offset":341},"end":{"line":4,"column":118,"offset":369},"indent":[]},"value":"os.memory.ram.user.stack"},{"from":{"fname":"os.memory.ram.user.heap","id":"rcyl8thq38qrnmhzb4oheq6","vaultName":"cs"},"type":"backlink","position":{"start":{"line":6,"column":15,"offset":424},"end":{"line":6,"column":43,"offset":452},"indent":[]},"value":"os.memory.ram.user.stack"}],"anchors":{"stack-allocation":{"type":"header","text":"Stack allocation","value":"stack-allocation","line":17,"column":0,"depth":2},"stack-size-estimation":{"type":"header","text":"Stack Size Estimation","value":"stack-size-estimation","line":21,"column":0,"depth":3},"dynamic-allocation-and-swapping":{"type":"header","text":"Dynamic Allocation and Swapping","value":"dynamic-allocation-and-swapping","line":29,"column":0,"depth":3},"customization":{"type":"header","text":"Customization","value":"customization","line":35,"column":0,"depth":3},"why-choose--for-this-purpose":{"type":"header","text":"Why choose  for this purpose?","value":"why-choose--for-this-purpose","line":41,"column":0,"depth":2}},"children":["heb70holb8xuqqi3mymo70u"],"parent":"9ljoremlysnbk32oari1pte","data":{}},"body":"<h1 id=\"stack-space\">Stack Space<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stack-space\"></a></h1>\n<blockquote>\n<p>Har thread ka ek stack. Har method ka ek stack frame.</p>\n</blockquote>\n<ul>\n<li>Used for <a href=\"/cs/notes/y0d9qba71drg24u6h6pd3t0\">Static Memory Allocation</a>.</li>\n<li>Used for local variables, function call frames, static thangs, with short lifespan.</li>\n<li>Limited size, more predictable.</li>\n<li>Automatically managed by OS</li>\n<li>Has <a href=\"/cs/notes/5mqyhqbl70k784qyd7mrkav\">Thread Safety</a> - Each thread has its own stack.</li>\n<li>Stack grows downward to lower addresses.</li>\n</ul>\n<h2 id=\"stack-allocation\">Stack allocation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stack-allocation\"></a></h2>\n<p>This is controlled by the OS. One stack is allocated to the program for each running thread.</p>\n<h3 id=\"stack-size-estimation\">Stack Size Estimation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stack-size-estimation\"></a></h3>\n<ul>\n<li>The OS allocates a stack for each system-level thread when the thread is created.</li>\n<li>The size of the stack is typically determined by the OS and compiler settings.</li>\n<li>For instance, on many systems, the default stack size might be around 1 MB to 2 MB.</li>\n<li>This default size is generally sufficient for most routine operations and function calls.</li>\n</ul>\n<h3 id=\"dynamic-allocation-and-swapping\">Dynamic Allocation and Swapping<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dynamic-allocation-and-swapping\"></a></h3>\n<ul>\n<li>Some systems can automatically grow the stack if thereâ€™s room in the virtual address space.</li>\n</ul>\n<h3 id=\"customization\">Customization<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#customization\"></a></h3>\n<p>While the OS provides a default stack size, some applications or languages allow customization. Developers can adjust the stack size based on their specific requirements.</p>\n<p>Be careful of <a href=\"/cs/notes/48ezf1ffhdkn2lb6crnk71z\">Stack Overflow</a> though.</p>\n<h2 id=\"why-choose-stack-for-this-purpose\">Why choose <a href=\"/cs/notes/v7k23euf8lafg51wcyolut2\">Stack</a> for this purpose?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#why-choose-stack-for-this-purpose\"></a></h2>\n<p>The design decision by OS Gods to choose this data structure to represent this memory space comes from the below reasoning.</p>\n<p>Each function call creates a new <a href=\"/cs/notes/heb70holb8xuqqi3mymo70u\">Stack Frame</a> on the stack, containing local variables, return addresses, and other bookkeeping information.</p>\n<p>The LIFO (last in, first out) structure of the stack ensures that function calls are properly nested and managed.</p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/cs/notes/heb70holb8xuqqi3mymo70u\">Stack Frame</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/cs/notes/x7nmks70ns14mh5k96w9aov\">Memory Management (cs)</a></li>\n<li><a href=\"/cs/notes/48ezf1ffhdkn2lb6crnk71z\">Stack Overflow (cs)</a></li>\n<li><a href=\"/cs/notes/k83mi3ehud8dj1dey48p9iv\">Memory (cs)</a></li>\n<li><a href=\"/cs/notes/rcyl8thq38qrnmhzb4oheq6\">Heap Space (cs)</a></li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}