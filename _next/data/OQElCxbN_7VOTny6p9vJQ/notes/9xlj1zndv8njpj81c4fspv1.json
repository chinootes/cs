{"pageProps":{"note":{"id":"9xlj1zndv8njpj81c4fspv1","title":"Regex","desc":"Regular Expressions","updated":1719812622278,"created":1713974732773,"custom":{},"fname":"std.regex","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"f663ad8ddb6509f5fda1f8dc36ab52a4","links":[],"anchors":{"some-common-ones":{"type":"header","text":"Some common ones","value":"some-common-ones","line":12,"column":0,"depth":2},"flags":{"type":"header","text":"Flags","value":"flags","line":21,"column":0,"depth":2},"quantifiers":{"type":"header","text":"Quantifiers","value":"quantifiers","line":28,"column":0,"depth":2},"metacharacters":{"type":"header","text":"Metacharacters","value":"metacharacters","line":37,"column":0,"depth":2},"escaping":{"type":"header","text":"Escaping","value":"escaping","line":45,"column":0,"depth":2},"logical-operators":{"type":"header","text":"Logical Operators","value":"logical-operators","line":50,"column":0,"depth":2},"standards":{"type":"header","text":"Standards","value":"standards","line":57,"column":0,"depth":2},"references":{"type":"header","text":"References","value":"references","line":69,"column":0,"depth":2}},"children":[],"parent":"xpf86eilma499o4ul566fk8","data":{}},"body":"<h1 id=\"regex\">Regex<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#regex\"></a></h1>\n<p>Used for pattern matching in string. Common use cases include text validation and text search.</p>\n<p>Regexes are enclosed within <code>/ /</code> (this document doesn't use these enclosings in most regexes to keep it clean).</p>\n<h2 id=\"some-common-ones\">Some common ones<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#some-common-ones\"></a></h2>\n<ul>\n<li><code>[abc]</code> - a, b or c</li>\n<li><code>[^abc]</code> -  any character except a, b, c</li>\n<li><code>[a-z]</code> - a to z</li>\n<li><code>[A-Z]</code> - A to Z</li>\n<li><code>[a-zA-Z]</code> - a to z, A to Z</li>\n<li><code>[0-9]</code> - 0 to 9</li>\n</ul>\n<h2 id=\"flags\">Flags<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#flags\"></a></h2>\n<ul>\n<li>\n<p><code>g</code></p>\n<p>  <code>/a/</code> will only match the first occurence of a.\n<code>/a/g</code> will match all occurences of a throughout the string.</p>\n</li>\n</ul>\n<h2 id=\"quantifiers\">Quantifiers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#quantifiers\"></a></h2>\n<ul>\n<li><code>[ ]?</code> - occurs 0 or 1 times</li>\n<li><code>[ ]+</code> - occurs 1 or more times</li>\n<li><code>[ ]*</code> - occurs 0 or more times</li>\n<li><code>[ ]{n}</code> - occurs n times</li>\n<li><code>[ ]{n,}</code> - occurs n or more times</li>\n<li><code>[ ]{y,z}</code> - occurs at least y times but less than z times</li>\n</ul>\n<h2 id=\"metacharacters\">Metacharacters<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#metacharacters\"></a></h2>\n<ul>\n<li><code>\\d</code> - all digits ≍ <code>[0-9]</code></li>\n<li><code>\\w</code> - all \"word\" (alphanumeric) characters ≍  <code>[a-zA-Z0-9]</code></li>\n<li><code>\\D</code> - everything except digits ≍ <code>[^0-9]</code></li>\n<li><code>\\W</code> - everything except alphanumeric characters ≍ <code>[^a-z]</code></li>\n<li><code>.</code> - any character except a newline</li>\n</ul>\n<h2 id=\"escaping\">Escaping<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#escaping\"></a></h2>\n<p>Use <code>\\</code> to replace any special character.</p>\n<h2 id=\"logical-operators\">Logical Operators<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#logical-operators\"></a></h2>\n<ul>\n<li><code>^</code> - Negation</li>\n<li><code>|</code> - Logical OR</li>\n<li><code>()</code> - to group your logic</li>\n</ul>\n<h2 id=\"standards\">Standards<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#standards\"></a></h2>\n<p>Regular expressions (regex) are not defined by a single, universally accepted standard like an RFC. However, there are efforts to establish some level of consistency across different regex implementations. </p>\n<p>Some regex standards are:</p>\n<ul>\n<li>POSIX Basic Regular Expressions (BRE)</li>\n<li>Extended Regular Expressions (ERE)</li>\n<li>PCRE (Perl Compatible Regular Expressions)</li>\n<li>I-Regexp (RFC 9485) </li>\n</ul>\n<h2 id=\"references\">References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#references\"></a></h2>\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet\">Regular expression syntax cheat sheet</a></p>\n</li>\n<li>\n<p>Good concise videos</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=9RksQ5YT7FM&#x26;ab_channel=CrackConcepts\">REGEX (REGULAR EXPRESSIONS) WITH EXAMPLES IN DETAIL | Regex Tutorial</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=sXQxhojSdZM&#x26;ab_channel=Fireship\">Regular Expressions (RegEx) in 100 Seconds - Fireship - YouTube</a></li>\n</ul>\n</li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}