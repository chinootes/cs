{"pageProps":{"note":{"id":"0wsnptopg4m3w3wp2qtjngv","title":"Upcasting","desc":"","updated":1708402034893,"created":1708401847240,"custom":{},"fname":"type theory.casting.object.upcasting","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"58070745959eafac41fedf68db909711","links":[{"type":"wiki","from":{"fname":"type theory.casting.object.upcasting","id":"0wsnptopg4m3w3wp2qtjngv","vaultName":"cs"},"value":"type theory.casting.implicit","position":{"start":{"line":6,"column":14,"offset":62},"end":{"line":6,"column":46,"offset":94},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.casting.implicit"}},{"type":"wiki","from":{"fname":"type theory.casting.object.upcasting","id":"0wsnptopg4m3w3wp2qtjngv","vaultName":"cs"},"value":"arch.design.oo.principles.solid.liskov","position":{"start":{"line":8,"column":48,"offset":151},"end":{"line":8,"column":90,"offset":193},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch.design.oo.principles.solid.liskov"}},{"type":"wiki","from":{"fname":"type theory.casting.object.upcasting","id":"0wsnptopg4m3w3wp2qtjngv","vaultName":"cs"},"value":"paradigm.oo.principles.polymorphism","position":{"start":{"line":12,"column":3,"offset":226},"end":{"line":12,"column":42,"offset":265},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oo.principles.polymorphism"}},{"type":"wiki","from":{"fname":"type theory.casting.object.upcasting","id":"0wsnptopg4m3w3wp2qtjngv","vaultName":"cs"},"value":"paradigm.oo.principles.polymorphism.overriding","position":{"start":{"line":18,"column":3,"offset":607},"end":{"line":18,"column":53,"offset":657},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oo.principles.polymorphism.overriding"}},{"type":"wiki","from":{"fname":"type theory.casting.object.upcasting","id":"0wsnptopg4m3w3wp2qtjngv","vaultName":"cs"},"value":"paradigm.oo.principles.polymorphism.runtime","position":{"start":{"line":26,"column":5,"offset":960},"end":{"line":26,"column":52,"offset":1007},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oo.principles.polymorphism.runtime"}},{"from":{"fname":"type theory.casting.implicit","id":"t2gbxkwlzfl6ow9gkcn9vaf","vaultName":"cs"},"type":"backlink","position":{"start":{"line":6,"column":48,"offset":179},"end":{"line":6,"column":88,"offset":219},"indent":[]},"value":"type theory.casting.object.upcasting"},{"from":{"fname":"lang.java.lib.arrays","id":"l6kravc26pl7ixjyg5o3nlk","vaultName":"cs"},"type":"backlink","position":{"start":{"line":31,"column":56,"offset":1008},"end":{"line":31,"column":96,"offset":1048},"indent":[]},"value":"type theory.casting.object.upcasting"},{"from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"type":"backlink","position":{"start":{"line":15,"column":4,"offset":622},"end":{"line":15,"column":44,"offset":662},"indent":[]},"value":"type theory.casting.object.upcasting"}],"anchors":{"syntax":{"type":"header","text":"Syntax","value":"syntax","line":10,"column":0,"depth":2},"what-upcasting-gives-us":{"type":"header","text":"What upcasting gives us?","value":"what-upcasting-gives-us","line":16,"column":0,"depth":2}},"children":[],"parent":"4wjv9ybt93skcx2sc20e7ke","data":{}},"body":"<h1 id=\"upcasting\">Upcasting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#upcasting\"></a></h1>\n<p>Casting from subclass to superclass</p>\n<h2 id=\"syntax\">Syntax<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#syntax\"></a></h2>\n<ul>\n<li>\n<p>Generally, <a href=\"/cs/notes/t2gbxkwlzfl6ow9gkcn9vaf\">Implicit Casting</a>. Why?</p>\n<p>=> Compiler knows that <em>Cat</em> is an <em>Animal.</em> <a href=\"/cs/notes/qrstlbi0nj33325jeyjbnqt\">Liskov Substitution Principle</a></p>\n</li>\n</ul>\n<h2 id=\"what-upcasting-gives-us\">What upcasting gives us?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-upcasting-gives-us\"></a></h2>\n<ul>\n<li>\n<p><a href=\"/cs/notes/c6vub6odp16dipszf5grj13\">Polymorphism</a></p>\n<p>  Instead of using different methods for a common functionality in each of the sub classes, we can have a common method in the superclass for that functionality and all subclass objects will be casted implicitly.</p>\n<p>  Example - a feed(Animal animal) function to which we can pass objects of Cat and Dog classes â†’ feed(cat); feed(dog);</p>\n</li>\n<li>\n<p><a href=\"/cs/notes/bqrul0cyjmdv0plhgeg8exa\">Overriding</a></p>\n<p>  When an object is upcasted, it still can call overridden methods from its original class.</p>\n<p>  For example, if Animal class has an eat() method and subclasses Cat and Dog override it.</p>\n<p>  eat(animal) will call the methods from either the class Cat or Dog, whichever it was before upcasting.</p>\n<p>  <a href=\"/cs/notes/cycr9ljbnb0i5tsmcw73ops\">Runtime Polymorphism</a> is a result of Upcasting.</p>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/cs/notes/t2gbxkwlzfl6ow9gkcn9vaf\">Implicit Casting (cs)</a></li>\n<li><a href=\"/cs/notes/l6kravc26pl7ixjyg5o3nlk\">Arrays (cs)</a></li>\n<li><a href=\"/cs/notes/ollv9jqhq9ai9508dpxinvg\">Object Type Conversion (cs)</a></li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}