{"pageProps":{"note":{"id":"9tn4qoat4ksb1kha3p77zhe","title":"ExecutorService","desc":"","updated":1727374020289,"created":1713125223294,"custom":{},"fname":"lang.java.lib.multithreading.executor service","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"94223ecd998d5dd0e763e82ee7687294","links":[{"from":{"fname":"lang.java.concurrency.multithreading","id":"jik03wh5g5jxxfz2aklbmub","vaultName":"cs"},"type":"backlink","position":{"start":{"line":45,"column":12,"offset":910},"end":{"line":45,"column":61,"offset":959},"indent":[]},"value":"lang.java.lib.multithreading.executor service"},{"from":{"fname":"lang.java.lib.multithreading","id":"2yvl1jdxsuy6584xzcm4759","vaultName":"cs"},"type":"backlink","position":{"start":{"line":29,"column":7,"offset":753},"end":{"line":29,"column":56,"offset":802},"indent":[]},"value":"lang.java.lib.multithreading.executor service"}],"anchors":{"instantiation-using-executors-factory-class":{"type":"header","text":"Instantiation using Executors Factory class","value":"instantiation-using-executors-factory-class","line":12,"column":0,"depth":2},"for-single-thread":{"type":"header","text":"For single thread","value":"for-single-thread","line":16,"column":0,"depth":3},"for-thread-pool":{"type":"header","text":"For thread pool","value":"for-thread-pool","line":22,"column":0,"depth":3},"for-scheduled-thread-pool":{"type":"header","text":"For scheduled thread pool","value":"for-scheduled-thread-pool","line":28,"column":0,"depth":3},"methods":{"type":"header","text":"Methods","value":"methods","line":35,"column":0,"depth":2},"executing-threads":{"type":"header","text":"Executing Threads","value":"executing-threads","line":37,"column":0,"depth":3},"shutting-down":{"type":"header","text":"Shutting down","value":"shutting-down","line":47,"column":0,"depth":3}},"children":[],"parent":"2yvl1jdxsuy6584xzcm4759","data":{}},"body":"<h1 id=\"executorservice\">ExecutorService<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#executorservice\"></a></h1>\n<p><code>ExecutorService</code> is an interface which allows us to execute tasks on thread asynchronously</p>\n<h2 id=\"instantiation-using-executors-factory-class\">Instantiation using <code>Executors</code> Factory class<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#instantiation-using-executors-factory-class\"></a></h2>\n<p>Instance can be retrieved from <code>Executors</code> factory class using different factory methods based on the number and types of threads needed. </p>\n<h3 id=\"for-single-thread\">For single thread<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#for-single-thread\"></a></h3>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ExecutorService</span> es <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newSingleThreadExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n</code></pre>\n<h3 id=\"for-thread-pool\">For thread pool<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#for-thread-pool\"></a></h3>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ExecutorService</span> es <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newFixedThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<h3 id=\"for-scheduled-thread-pool\">For scheduled thread pool<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#for-scheduled-thread-pool\"></a></h3>\n<p>In scheduled thread pool, we can schedule tasks of the threads.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ExecutorService</span> es <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newScheduledThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<h2 id=\"methods\">Methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#methods\"></a></h2>\n<h3 id=\"executing-threads\">Executing Threads<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#executing-threads\"></a></h3>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//We can use the following methods</span>\n<span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> task<span class=\"token punctuation\">)</span>\n<span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> task<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> task<span class=\"token punctuation\">)</span>\n<span class=\"token function\">invokeAny</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Callable</span><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> tasks<span class=\"token punctuation\">)</span>\n<span class=\"token function\">invokeAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Callable</span><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> tasks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"shutting-down\">Shutting down<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#shutting-down\"></a></h3>\n<p>We can use the following methods after we're done. If we don't, the threads will keep running and JVM won't shut down.</p>\n<ul>\n<li><code>shutdown()</code> method</li>\n<li><code>shutdownNow()</code> method</li>\n<li><code>awaitTermination()</code> method</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/cs/notes/jik03wh5g5jxxfz2aklbmub\">Multithreading (cs)</a></li>\n<li><a href=\"/cs/notes/2yvl1jdxsuy6584xzcm4759\">Multithreading (cs)</a></li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}