{"pageProps":{"note":{"id":"ccr65hw7c908e1ko6zcmhic","title":"React Component Lifecycle","desc":"","updated":1722665879329,"created":1722624374731,"custom":{},"fname":"lang.js.react.components.lifecycle","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"50972be7804b7f08188da9cfea438cbe","links":[{"type":"wiki","from":{"fname":"lang.js.react.components.lifecycle","id":"ccr65hw7c908e1ko6zcmhic","vaultName":"cs"},"value":"lang.js.react.components","position":{"start":{"line":3,"column":40,"offset":106},"end":{"line":3,"column":68,"offset":134},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.js.react.components"}},{"type":"wiki","from":{"fname":"lang.js.react.components.lifecycle","id":"ccr65hw7c908e1ko6zcmhic","vaultName":"cs"},"value":"tags.optimization.performance","alias":"#optimization.performance","position":{"start":{"line":31,"column":17,"offset":1332},"end":{"line":31,"column":42,"offset":1357},"indent":[]},"xvault":false,"to":{"fname":"tags.optimization.performance"}}],"anchors":{"lifecycle-methods":{"type":"header","text":"Lifecycle methods","value":"lifecycle-methods","line":14,"column":0,"depth":2},"mounting":{"type":"header","text":"Mounting","value":"mounting","line":18,"column":0,"depth":3},"updating":{"type":"header","text":"Updating","value":"updating","line":31,"column":0,"depth":3},"unmounting":{"type":"header","text":"Unmounting","value":"unmounting","line":47,"column":0,"depth":3},"error-handling":{"type":"header","text":"Error Handling","value":"error-handling","line":53,"column":0,"depth":3}},"children":[],"parent":"4kr8qnqvd9azf1jf4gz7hfn","data":{}},"body":"<h1 id=\"react-component-lifecycle\">React Component Lifecycle<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#react-component-lifecycle\"></a></h1>\n<p><img src=\"/cs/lang.js.react.components.lifecycle.png\" alt=\"react lifecycle stages\"></p>\n<ol>\n<li><strong>Mounting</strong>: When an instance of a <a href=\"/cs/notes/4kr8qnqvd9azf1jf4gz7hfn\">React Component</a> is created and inserted into the DOM</li>\n<li><strong>Updating</strong>: When component is re-rendered due to changes to props or state</li>\n<li><strong>Unmounting</strong>: When component is being removed from DOM</li>\n<li><strong>Error Handling</strong>: </li>\n</ol>\n<h2 id=\"lifecycle-methods\">Lifecycle methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#lifecycle-methods\"></a></h2>\n<p>React offers several methods which are automatically called in different stages of lifecycle of a component.</p>\n<h3 id=\"mounting\">Mounting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mounting\"></a></h3>\n<ul>\n<li><code>constructor(props)</code>: \n<ul>\n<li>Called: before component is mounted</li>\n<li>Used for: initializing state, binding event handlers</li>\n</ul>\n</li>\n<li><code>static getDerivedStateFromProps(props, state)</code>: \n<ul>\n<li>Called: right before rendering, both on the initial mount and on subsequent updates.</li>\n<li>Used for: updating state based on props -> returned object is used to update state - <code>null</code> to update nothing. </li>\n</ul>\n</li>\n<li><code>render()</code>: <strong>Required</strong>. Returns JSX to render.</li>\n<li><code>componentDidMount()</code>: \n<ul>\n<li>Called immediately after component is mounted.</li>\n<li>Used for: making network requests, setting up subscriptions, interacting with DOM</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"updating\">Updating<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#updating\"></a></h3>\n<ul>\n<li><code>static getDerivedStateFromProps(props, state)</code>: \n<ul>\n<li>Called: again before rendering.</li>\n</ul>\n</li>\n<li><code>shouldComponentUpdate(nextProps, nextState)</code>: Determines whether component should re-render\n<ul>\n<li>Called: before render</li>\n<li>Used for: <a class=\"color-tag\" style=\"--tag-color: #ffffe4;\" href=\"/cs/notes/cnnovjexy4xmoc3282vojva\">#optimization.performance</a> - returning false skips update (true by default)</li>\n</ul>\n</li>\n<li><code>render()</code>: Re-renders the component</li>\n<li><code>getSnapshotBeforeUpdate(prevProps, prevState)</code>: \n<ul>\n<li>Called: right before DOM is updated. </li>\n<li>Used for: passing something to <code>componentDidUpdate()</code> - you can return it from this method.</li>\n</ul>\n</li>\n<li><code>componentDidUpdate(prevProps, prevState, snapshot)</code>: \n<ul>\n<li>Called: immediately after component updates </li>\n<li>Used for: working with DOM or sending network requests after updates.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"unmounting\">Unmounting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#unmounting\"></a></h3>\n<p><code>componentWillUnmount()</code>:</p>\n<pre><code>- Called: right before component is unmounted/destroyed\n- Used for: cleanup(e.g. cleaning timers, cancelling network requests, removing event listeners)\n</code></pre>\n<h3 id=\"error-handling\">Error Handling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#error-handling\"></a></h3>\n<ul>\n<li><code>static getDerivedStateFromError(error)</code>\n<ul>\n<li>Used for: updating state based on the error so that error is not propagated to next render -> returned object is used to update state - <code>null</code> to update nothing.</li>\n</ul>\n</li>\n<li><code>componentDidCatch(error)</code>: \n<ul>\n<li>Called: when error has been thrown by descendant component</li>\n<li>Used for: logging error info</li>\n</ul>\n</li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}