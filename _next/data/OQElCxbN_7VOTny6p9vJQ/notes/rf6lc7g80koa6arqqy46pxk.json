{"pageProps":{"note":{"id":"rf6lc7g80koa6arqqy46pxk","title":"Test Double","desc":"","updated":1708453800352,"created":1708453622761,"custom":{},"fname":"dev.tests.unit.double","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"44d1090b3fc0dee4ba1f0bc2e5af7744","links":[],"anchors":{"types-of-test-doubles":{"type":"header","text":"Types of Test doubles","value":"types-of-test-doubles","line":12,"column":0,"depth":2},"stub":{"type":"header","text":"Stub","value":"stub","line":14,"column":0,"depth":3},"spy":{"type":"header","text":"Spy","value":"spy","line":35,"column":0,"depth":3},"fake":{"type":"header","text":"Fake","value":"fake","line":56,"column":0,"depth":3},"mock":{"type":"header","text":"Mock","value":"mock","line":60,"column":0,"depth":3},"dummy":{"type":"header","text":"Dummy","value":"dummy","line":93,"column":0,"depth":3},"references":{"type":"header","text":"References","value":"references","line":97,"column":0,"depth":2}},"children":[],"parent":"dxpzum9arrbthsj6ma6diaf","data":{}},"body":"<h1 id=\"test-double\">Test Double<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#test-double\"></a></h1>\n<ul>\n<li>Like stunt double, but for testing.</li>\n<li>For testing purposes, test double does the job of the code on which your code under test depends.</li>\n</ul>\n<h2 id=\"types-of-test-doubles\">Types of Test doubles<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#types-of-test-doubles\"></a></h2>\n<h3 id=\"stub\">Stub<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stub\"></a></h3>\n<p>Provides “indirect input”</p>\n<ol>\n<li>Test places desired return value in stub</li>\n<li>Stub returns the desired value to the code under test</li>\n</ol>\n<pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">CLASS</span> ltd_stub <span class=\"token keyword\">DEFINITION</span> <span class=\"token keyword\">FOR</span> <span class=\"token keyword\">TESTING</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">PUBLIC</span> <span class=\"token keyword\">SECTION</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">INTERFACES</span> if_cash_provider <span class=\"token keyword\">PARTIALLY</span> <span class=\"token keyword\">IMPLEMENTED</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> m_notes <span class=\"token keyword\">TYPE</span> if_cash_provider<span class=\"token token-operator punctuation\">=></span>tt_change<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span><span class=\"token punctuation\">.</span>\n        \n<span class=\"token keyword\">CLASS</span> ltd_stub <span class=\"token keyword\">IMPLEMENTATION</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">METHOD</span> if_cash_provider<span class=\"token token-operator punctuation\">~</span>get_notes<span class=\"token punctuation\">.</span>\n    r_notes <span class=\"token operator\">=</span> m_notes<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"spy\">Spy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#spy\"></a></h3>\n<p>Logs the “indirect output”</p>\n<ol>\n<li>Spy logs the value passed by the code under test</li>\n<li>Test verifies the recorded value</li>\n</ol>\n<pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">CLASS</span> ltd_spy <span class=\"token keyword\">DEFINITION</span> <span class=\"token keyword\">FOR</span> <span class=\"token keyword\">TESTING</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">PUBLIC</span> <span class=\"token keyword\">SECTION</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">INTERFACES</span> if_cash_provider <span class=\"token keyword\">PARTIALLY</span> <span class=\"token keyword\">IMPLEMENTED</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> m_currency <span class=\"token keyword\">TYPE</span> string<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">CLASS</span> ltd_spy <span class=\"token keyword\">IMPLEMENTATION</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">METHOD</span> if_cash_provider<span class=\"token token-operator punctuation\">~</span>get_notes<span class=\"token punctuation\">.</span>\n    m_currency <span class=\"token operator\">=</span> i_currency<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span>\n</code></pre>\n<h3 id=\"fake\">Fake<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fake\"></a></h3>\n<p>Simple implementation of depended-on component</p>\n<h3 id=\"mock\">Mock<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#mock\"></a></h3>\n<p>Extension of stub, spy, and fake; verifies the “indirect input” and/or “indirect output” according to given expectations</p>\n<ol>\n<li>Test places desired value in mock</li>\n<li>Spy logs the value passed by the code\nunder test</li>\n<li>Stub returns the desired value to the code\nunder test</li>\n<li>Test verifies the recorded value</li>\n</ol>\n<pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">CLASS</span> ltd_mock <span class=\"token keyword\">DEFINITION</span> <span class=\"token keyword\">FOR</span> <span class=\"token keyword\">TESTING</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">PUBLIC</span> <span class=\"token keyword\">SECTION</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">INTERFACES</span> if_cash_provider <span class=\"token keyword\">PARTIALLY</span> <span class=\"token keyword\">IMPLEMENTED</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> m_currency <span class=\"token keyword\">TYPE</span> string<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> m_currency_exp <span class=\"token keyword\">TYPE</span> string<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> m_notes <span class=\"token keyword\">TYPE</span> if_cash_provider<span class=\"token token-operator punctuation\">=></span>tt_change<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">CLASS</span> ltd_mock <span class=\"token keyword\">IMPLEMENTATION</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">METHOD</span> if_cash_provider<span class=\"token token-operator punctuation\">~</span>get_notes<span class=\"token punctuation\">.</span>\n    m_currency <span class=\"token operator\">=</span> i_currency<span class=\"token punctuation\">.</span>\n    r_notes <span class=\"token operator\">=</span> m_notes<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">METHOD</span> assert_expectations<span class=\"token punctuation\">.</span>\n    cl_abap_unit_assert<span class=\"token token-operator punctuation\">=></span>assert_equals<span class=\"token punctuation\">(</span>\n    act <span class=\"token operator\">=</span> m_currency\n    <span class=\"token keyword\">exp</span> <span class=\"token operator\">=</span> m_currency_exp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDCLASS</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"dummy\">Dummy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dummy\"></a></h3>\n<p>Satisfies syntax requirements; does nothing</p>\n<h2 id=\"references\">References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#references\"></a></h2>\n<p>Terminology from the book <em>xUnit Test Patterns, Gerard Meszaros</em></p>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}