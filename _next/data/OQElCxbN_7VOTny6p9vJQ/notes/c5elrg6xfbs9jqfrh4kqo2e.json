{"pageProps":{"note":{"id":"c5elrg6xfbs9jqfrh4kqo2e","title":"Immutable Class","desc":"","updated":1727116810248,"created":1712859683855,"custom":{},"fname":"arch.design.oo.patterns.immutable class","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"99d2310a8478bfb909e282dba7ea8dbf","links":[{"type":"wiki","from":{"fname":"arch.design.oo.patterns.immutable class","id":"c5elrg6xfbs9jqfrh4kqo2e","vaultName":"cs"},"value":"paradigm.oo.components.object.cloning","alias":"deep cloning","position":{"start":{"line":16,"column":106,"offset":426},"end":{"line":16,"column":173,"offset":493},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oo.components.object.cloning","anchorHeader":"deep-cloning"}},{"type":"wiki","from":{"fname":"arch.design.oo.patterns.immutable class","id":"c5elrg6xfbs9jqfrh4kqo2e","vaultName":"cs"},"value":"lang.java.paradigms.oo.objects.cloning","alias":"clone method","position":{"start":{"line":19,"column":8,"offset":652},"end":{"line":19,"column":63,"offset":707},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.java.paradigms.oo.objects.cloning"}},{"type":"wiki","from":{"fname":"arch.design.oo.patterns.immutable class","id":"c5elrg6xfbs9jqfrh4kqo2e","vaultName":"cs"},"value":"lang.java.lib.interfaces.marker.cloneable","position":{"start":{"line":19,"column":125,"offset":769},"end":{"line":19,"column":170,"offset":814},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"lang.java.lib.interfaces.marker.cloneable"}},{"type":"wiki","from":{"fname":"arch.design.oo.patterns.immutable class","id":"c5elrg6xfbs9jqfrh4kqo2e","vaultName":"cs"},"value":"paradigm.func","position":{"start":{"line":62,"column":19,"offset":1937},"end":{"line":62,"column":36,"offset":1954},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.func"}},{"from":{"fname":"execution.concurrency.multithreading.thread safety","id":"5mqyhqbl70k784qyd7mrkav","vaultName":"cs"},"type":"backlink","position":{"start":{"line":8,"column":7,"offset":333},"end":{"line":8,"column":50,"offset":376},"indent":[]},"value":"arch.design.oo.patterns.immutable class"},{"from":{"fname":"lang.java.lib.string","id":"vqbisdumti23oeq2xk6oml5","vaultName":"cs"},"type":"backlink","position":{"start":{"line":13,"column":22,"offset":380},"end":{"line":13,"column":65,"offset":423},"indent":[]},"value":"arch.design.oo.patterns.immutable class"},{"from":{"fname":"lang.java.lib.string","id":"vqbisdumti23oeq2xk6oml5","vaultName":"cs"},"type":"backlink","position":{"start":{"line":16,"column":1,"offset":427},"end":{"line":16,"column":54,"offset":480},"indent":[]},"value":"arch.design.oo.patterns.immutable class"},{"from":{"fname":"lang.java.lib.classes.wrappers","id":"rhm2ueynmzepd2gxd9tj0sx","vaultName":"cs"},"type":"backlink","position":{"start":{"line":16,"column":27,"offset":894},"end":{"line":16,"column":70,"offset":937},"indent":[]},"value":"arch.design.oo.patterns.immutable class"}],"anchors":{"what-makes-a-class-immutable":{"type":"header","text":"What makes a class immutable?","value":"what-makes-a-class-immutable","line":13,"column":0,"depth":2},"how-to-create-an-immutable-class":{"type":"header","text":"How to create an immutable class","value":"how-to-create-an-immutable-class","line":19,"column":0,"depth":2},"benefits":{"type":"header","text":"Benefits","value":"benefits","line":58,"column":0,"depth":2},"use-cases":{"type":"header","text":"Use cases","value":"use-cases","line":72,"column":0,"depth":2},"references":{"type":"header","text":"References","value":"references","line":76,"column":0,"depth":2}},"children":[],"parent":"g2xyppezmzmbtru51ncc3zo","data":{}},"body":"<h1 id=\"immutable-class\">Immutable Class<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#immutable-class\"></a></h1>\n<p>Cannot be changed (mutated)</p>\n<p>Whenever changed - a new instance is created</p>\n<h2 id=\"what-makes-a-class-immutable\">What makes a class immutable?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-makes-a-class-immutable\"></a></h2>\n<ul>\n<li>Instance variable is final (value can't be changed)</li>\n<li>class = final - So subclass can't be created</li>\n<li>No setters</li>\n</ul>\n<h2 id=\"how-to-create-an-immutable-class\">How to create an immutable class<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-create-an-immutable-class\"></a></h2>\n<ul>\n<li>Create <strong>final</strong> class with all <strong>final data members</strong>.</li>\n<li>Whichever way you decide to initialize the object and add value to these fields make sure to perform a <a href=\"/cs/notes/3y962961axl79uijuaseom8#deep-cloning\">deep cloning</a> for any reference fields.</li>\n<li>You have to be careful when there's a reference in the members as well. For example, arrays in Java are mutable objects. </li>\n</ul>\n<p>ðŸ’¡ Use <a href=\"/cs/notes/lxfnzfx9x4xdx3pxjcvt5lq\">clone method</a> to perform deep cloning. You can use the same method for any <a href=\"/cs/notes/6fe2bcmqj3rdsd3wd82k3lp\">Cloneable</a> object.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ImmutableClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ImmutableClass</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMapValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"benefits\">Benefits<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#benefits\"></a></h2>\n<p>The main benefits of immutability come in case of multi-threaded applications, functional programming and high-security systems.</p>\n<ul>\n<li>Thead safety</li>\n<li>Predictable behavior</li>\n<li>Enhanced security: ensures that sensitive data cannot be modified after its created preventing unintended or malicious change.</li>\n<li>Caching: \n<ul>\n<li>Immutable objects can be safely shared across different parts of program.</li>\n<li>Hashcodes for hash-based structures can be precomputed and cached - since they won't change</li>\n</ul>\n</li>\n<li>Works well with <a href=\"/cs/notes/wpdf282ghgnjvgkwws15iye\">Functional Programming</a>\n<ul>\n<li>Immutability is one of the principles of functional programming</li>\n<li>Immutable objects ensure that functions don't modify anything outside their scope</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"use-cases\">Use cases<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#use-cases\"></a></h2>\n<ul>\n<li></li>\n</ul>\n<h2 id=\"references\">References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#references\"></a></h2>\n<ul>\n<li><a href=\"https://arc.net/l/quote/zfjjlivr\">How To Create an Immutable Class in Java</a></li>\n<li><a href=\"https://www.journaldev.com/1432/java-immutable-class-builder\">Java Immutable Class - Builder Pattern</a> <em>dead</em>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220704144259/https://www.journaldev.com/1432/java-immutable-class-builder\">Archive Link</a></li>\n</ul>\n</li>\n<li><a href=\"https://stackoverflow.com/questions/3769607/why-do-we-need-immutable-class\">Why do we need immutable class?</a></li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/cs/notes/5mqyhqbl70k784qyd7mrkav\">Thread Safety (cs)</a></li>\n<li><a href=\"/cs/notes/vqbisdumti23oeq2xk6oml5\">String (cs)</a></li>\n<li><a href=\"/cs/notes/rhm2ueynmzepd2gxd9tj0sx\">Wrapper Classes (cs)</a></li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}