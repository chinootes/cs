{"pageProps":{"note":{"id":"ollv9jqhq9ai9508dpxinvg","title":"Object Type Conversion","desc":"","updated":1727010246296,"created":1712883976229,"custom":{},"fname":"lang.java.typing.casting.object type conversion","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"cf7a95100cf426870e40921562915178","links":[{"type":"wiki","from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"value":"type theory.casting.object.upcasting","position":{"start":{"line":15,"column":4,"offset":622},"end":{"line":15,"column":44,"offset":662},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.casting.object.upcasting"}},{"type":"wiki","from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"value":"type theory.casting.implicit","position":{"start":{"line":17,"column":1,"offset":672},"end":{"line":17,"column":33,"offset":704},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.casting.implicit"}},{"type":"wiki","from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"value":"type theory.casting.object.downcasting","position":{"start":{"line":19,"column":4,"offset":709},"end":{"line":19,"column":46,"offset":751},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.casting.object.downcasting"}},{"type":"wiki","from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"value":"type theory.casting.explicit","position":{"start":{"line":23,"column":3,"offset":774},"end":{"line":23,"column":35,"offset":806},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.casting.explicit"}},{"type":"wiki","from":{"fname":"lang.java.typing.casting.object type conversion","id":"ollv9jqhq9ai9508dpxinvg","vaultName":"cs"},"value":"dev.issues.exception.types.unchecked.class cast exception","alias":"ClassCastException","position":{"start":{"line":45,"column":4,"offset":1191},"end":{"line":45,"column":84,"offset":1271},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.issues.exception.types.unchecked.class cast exception"}}],"anchors":{"in-java":{"type":"header","text":"in Java","value":"in-java","line":21,"column":0,"depth":2},"in-java-1":{"type":"header","text":"in Java","value":"in-java-1","line":25,"column":0,"depth":2},"syntax":{"type":"header","text":"Syntax","value":"syntax","line":27,"column":0,"depth":2},"classcastexception":{"type":"header","text":"ClassCastException","value":"classcastexception","line":51,"column":0,"depth":2}},"children":[],"parent":"z09h7enxcvyd786idadhfil","data":{}},"body":"<h1 id=\"object-type-conversion\">Object Type Conversion<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#object-type-conversion\"></a></h1>\n<ul>\n<li>\n<p>Similarity with primitive conversion</p>\n<p>  Converting from one type to another</p>\n</li>\n<li>\n<p>Difference</p>\n<p>  Primitive type variables store values. So when we convert from a larger to type to smaller type, we might end up loosing information.</p>\n<p>  Reference variables on the other hand do not contain the object itself, but its reference. So when we convert types of objects, we're not changing the object, but we're just changing the label on the object, expanding or narrowing the opportunities to work with.</p>\n<p>  Upcasting narrows the list of methods and properties available to this object and down casting can extend it.</p>\n</li>\n</ul>\n<h2 id=\"upcasting-in-java\"><a href=\"/cs/notes/0wsnptopg4m3w3wp2qtjngv\">Upcasting</a> in Java<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#upcasting-in-java\"></a></h2>\n<p><a href=\"/cs/notes/t2gbxkwlzfl6ow9gkcn9vaf\">Implicit Casting</a></p>\n<h2 id=\"downcasting-in-java\"><a href=\"/cs/notes/8h60y5yvyhfe2ts2gm228ub\">Downcasting</a> in Java<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#downcasting-in-java\"></a></h2>\n<h2 id=\"syntax\">Syntax<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#syntax\"></a></h2>\n<ul>\n<li>\n<p><a href=\"/cs/notes/iy76fyesfdptlmk2xwm9iom\">Explicit Casting</a></p>\n</li>\n<li>\n<p>Same as narrowing conversion in primitive data types</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">float</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>→ <span class=\"token number\">10.5</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>→ <span class=\"token number\">10</span>\n\n<span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Cat</span> cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span> animal<span class=\"token punctuation\">;</span>    \n</code></pre>\n</li>\n<li>\n<p>Another way</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Cat</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">isInstance</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token class-name\">Cat</span> cat <span class=\"token operator\">=</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">cast</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</li>\n</ul>\n<h2 id=\"classcastexception\"><a href=\"/cs/notes/9o86nbg2dro9c4zutzu7c9c\">ClassCastException</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#classcastexception\"></a></h2>\n<p>That is why it is advised to use <em>instanceOf</em> check before downcasting.</p>\n<ul>\n<li>\n<p>instanceOf</p>\n<p>  Used to avoid the ClassCastException by checking if the object belongs to a certain type</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//Example </span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animal <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cat</span><span class=\"token punctuation\">)</span> animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">meow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//case 1</span>\n<span class=\"token class-name\">Dog</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> dog<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cat</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>→ <span class=\"token boolean\">false</span>\n\n<span class=\"token comment\">//case 2</span>\n<span class=\"token class-name\">Cat</span> cat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">;</span>\n\ncat<span class=\"token punctuation\">.</span><span class=\"token function\">meow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Cat</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>→ <span class=\"token boolean\">true</span>\n</code></pre>\n</li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}