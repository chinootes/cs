{"pageProps":{"note":{"id":"ejs8lnn6txy9zzk51cot50f","title":"Enums","desc":"","updated":1712885350265,"created":1712885042093,"custom":{},"fname":"lang.java.lib.enums","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"ae796524a836d24ee36ef59ae272f17a","links":[{"type":"wiki","from":{"fname":"lang.java.lib.enums","id":"ejs8lnn6txy9zzk51cot50f","vaultName":"cs"},"value":"type theory.data types.enum","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":32,"offset":33},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"type theory.data types.enum"}}],"anchors":{"syntax":{"type":"header","text":"Syntax","value":"syntax","line":11,"column":0,"depth":2},"values-of-an-enum-and-constructor-of-enums":{"type":"header","text":"Values of an Enum and Constructor of Enums","value":"values-of-an-enum-and-constructor-of-enums","line":20,"column":0,"depth":2},"methods":{"type":"header","text":"Methods","value":"methods","line":46,"column":0,"depth":2},"values":{"type":"header","text":"values()","value":"values","line":50,"column":0,"depth":3},"valueof":{"type":"header","text":"valueOf()","value":"valueof","line":61,"column":0,"depth":3},"ordinal":{"type":"header","text":"ordinal()","value":"ordinal","line":71,"column":0,"depth":3},"internal-code-generated-by-compiler-for-enums":{"type":"header","text":"Internal Code Generated by Compiler for enums","value":"internal-code-generated-by-compiler-for-enums","line":80,"column":0,"depth":2},"detailed-version-of-the-above-enum-code":{"type":"header","text":"Detailed version of the above enum code","value":"detailed-version-of-the-above-enum-code","line":96,"column":0,"depth":3},"enums-in-switch-statement":{"type":"header","text":"Enums in Switch statement","value":"enums-in-switch-statement","line":130,"column":0,"depth":2},"enums-and-classes":{"type":"header","text":"Enums and Classes","value":"enums-and-classes","line":147,"column":0,"depth":1},"difference-between-enums-and-class":{"type":"header","text":"Difference between enums and class","value":"difference-between-enums-and-class","line":158,"column":0,"depth":2}},"children":[],"parent":"2iaiw6abjhpczxzzr1tsqep","data":{}},"body":"<h1 id=\"enums\">Enums<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enums\"></a></h1>\n<p><a href=\"/cs/notes/r1t0gj9h9qzcsp1bd3v5ksj\">Enum (Enumerated Types)</a> in Java.</p>\n<h2 id=\"syntax\">Syntax<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#syntax\"></a></h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//Syntax</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">{</span>\nAPPLE<span class=\"token punctuation\">,</span> DELL<span class=\"token punctuation\">,</span> HTC<span class=\"token punctuation\">;</span> <span class=\"token comment\">//Semicolon not mandatory</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"values-of-an-enum-and-constructor-of-enums\">Values of an Enum and Constructor of Enums<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#values-of-an-enum-and-constructor-of-enums\"></a></h2>\n<p>Compiler adds a constructor to the enum. We can enter custom values for enums too.  We need to create a parameterized constructor for that.</p>\n<ul>\n<li>\n<p>Example</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">enum</span>  <span class=\"token class-name\">Fruits</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">APPLE</span><span class=\"token punctuation\">(</span>‚ÄúRED‚Äù<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">BANANA</span><span class=\"token punctuation\">(</span>‚ÄúYELLOW‚Äù<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GRAPES</span><span class=\"token punctuation\">(</span>‚ÄúGREEN‚Äù<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>  Thus, the value of enum APPLE is not \"APPLE\". It is \"RED\" instead.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//Example</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Mobile</span> <span class=\"token punctuation\">{</span> \n<span class=\"token keyword\">int</span> price<span class=\"token punctuation\">;</span>\n<span class=\"token function\">APPLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SAMSUNG</span><span class=\"token punctuation\">(</span><span class=\"token number\">700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">HTC</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Mobile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> price <span class=\"token operator\">=</span> p<span class=\"token punctuation\">}</span> <span class=\"token comment\">//Constructor</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>Although, the constructor is private and hence, enums can't be initialised by new().</p>\n</li>\n</ul>\n<h2 id=\"methods\">Methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#methods\"></a></h2>\n<ul>\n<li>Functions values(), valueOf() and ordinal() are added by compiler/JVM to the enum</li>\n</ul>\n<h3 id=\"values\"><code>values()</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#values\"></a></h3>\n<ul>\n<li>Returns all values in the enum in form of an array.</li>\n<li>Usage</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">//Output - APPLE,HTC,SAMSUNG</span>\n\n</code></pre>\n<h3 id=\"valueof\"><code>valueOf()</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#valueof\"></a></h3>\n<ul>\n<li>\n<p>Returns value of given constant enum</p>\n</li>\n<li>\n<p>Usage</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Laptops</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"APPLE\"</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//APPLE</span>\n</code></pre>\n</li>\n</ul>\n<h3 id=\"ordinal\"><code>ordinal()</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ordinal\"></a></h3>\n<ul>\n<li>\n<p>Returns index of an enum constant.</p>\n</li>\n<li>\n<p>Usage</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Laptops</span><span class=\"token punctuation\">.</span>HTC<span class=\"token punctuation\">.</span><span class=\"token function\">ordinal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//2</span>\n</code></pre>\n</li>\n</ul>\n<h2 id=\"internal-code-generated-by-compiler-for-enums\">Internal Code Generated by Compiler for enums<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#internal-code-generated-by-compiler-for-enums\"></a></h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">{</span> APPLE<span class=\"token punctuation\">,</span> DELL<span class=\"token punctuation\">,</span> HTC <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>All enums get converted to class</strong>. This üëÜüèΩ is same as writing üëáüèΩ</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> APPLE <span class=\"token operator\">=</span> <span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> SAMSUNG <span class=\"token operator\">=</span> <span class=\"token string\">\"Samsung\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> HTC <span class=\"token operator\">=</span> <span class=\"token string\">\"HTC\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"detailed-version-of-the-above-enum-code\">Detailed version of the above enum code<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#detailed-version-of-the-above-enum-code\"></a></h3>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Laptop</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Enum</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values<span class=\"token punctuation\">{</span>                         <span class=\"token comment\">//values()</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>$VALUES<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Laptop</span> <span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>                <span class=\"token comment\">//valueOf()</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Enum<span class=\"token punctuation\">.</span>ValueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>             <span class=\"token comment\">//Constructor - is private</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    value <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Laptop</span> APPLE<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Laptop</span> SAMSUNG<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Laptop</span> HTC<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> $VALUES<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span><span class=\"token punctuation\">{</span>\n    APPLE <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"APPLE\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SAMSUNG <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SAMSUNG\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    HTC <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTC\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $VALUES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n    APPLE<span class=\"token punctuation\">,</span> SAMSUNG<span class=\"token punctuation\">,</span> HTC\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"enums-in-switch-statement\">Enums in Switch statement<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enums-in-switch-statement\"></a></h2>\n<p>Switch statement cases can only include values which are in enum.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">{</span> APPLE<span class=\"token punctuation\">,</span> DELL<span class=\"token punctuation\">,</span> SAMSUNG <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token class-name\">Laptop</span> l <span class=\"token operator\">=</span> <span class=\"token class-name\">Laptop</span><span class=\"token punctuation\">.</span>SAMSUNG<span class=\"token punctuation\">;</span> <span class=\"token comment\">//Creating object of enum</span>\n<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> APPLE<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> SAMSUNG<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> LUDO<span class=\"token operator\">:</span> <span class=\"token comment\">//Will give error.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1 id=\"enums-and-classes\">Enums and Classes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#enums-and-classes\"></a></h1>\n<ul>\n<li>\"Inner\" Enum\n<ul>\n<li>In Java, enums can be created inside a class as well.</li>\n</ul>\n</li>\n<li>Class extended by all enums\n<ul>\n<li>All enums extends a class called <strong>Enum</strong> which in turn extends Object class.</li>\n</ul>\n</li>\n<li>Inheritance in enums\n<ul>\n<li>Enums can't extend classes but can implement interfaces.</li>\n</ul>\n</li>\n<li>Difference between C++ and Java enums\nData members and methods can be created inside Java enum</li>\n</ul>\n<h2 id=\"difference-between-enums-and-class\">Difference between enums and class<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#difference-between-enums-and-class\"></a></h2>\n<ul>\n<li>Enum constants are public, static, final</li>\n<li>Enums can't extend other classes</li>\n</ul>","noteIndex":{"id":"7ncn3al6mmutkhgoesulce9","title":"Computer Science","desc":"","updated":1715103618849,"created":1713296516553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cs"},"contentHash":"36faf26c6be438d4aed355d72b55a110","links":[{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"arch","position":{"start":{"line":6,"column":3,"offset":105},"end":{"line":6,"column":11,"offset":113},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"arch"}},{"type":"wiki","from":{"fname":"root","id":"7ncn3al6mmutkhgoesulce9","vaultName":"cs"},"value":"paradigm","position":{"start":{"line":11,"column":3,"offset":159},"end":{"line":11,"column":15,"offset":171},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm"}}],"anchors":{"references":{"type":"header","text":"References","value":"references","line":23,"column":0,"depth":2}},"children":["0xgibr34qhbv1edksyoxakk","e5kuv5gcz6pdxrsakpf7eia","t246wcci6dy9lnof7l1os4l","71sipcgr0pdqyxnmntvx28w","5omh1zinw87le0eyms8g5mk","91er1wb2f5wmbdb5axx5r3r","9z7xt251y1nm9dy2exatukr","u712e7r8bk97hpg9h9j3m4f","xpf86eilma499o4ul566fk8","a1g6tjx0p6bp25v75262gp9","3pr5jo5c742vop6gnoe7c3k","stxoouqpk2rivotuvhjx4yz","g8tiwuotfnbfrbctwyfg8rc","jk63inaclv0ps5i7mktzmm2","5m1yclhdqeshe5szt0masfk","abgag3m7m74vmofvzyyt2fm"],"parent":null,"data":{},"body":"\n\nThese notes are arranged into the below topics:\n\n- AI (Sorry this is on the top, list is alphabetic)\n- [[arch]]\n- Data\n- Execution\n- Languages\n- Semantics\n- [[paradigm]]\n- Philosophy\n- Dev\n- Tools\n- Type Theory\n\n## References\n\n- Hierarchy inpiration - [Map of Computer Science](https://www.flickr.com/photos/95869671@N08/36231833334/in/photostream/lightbox/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/chinootes/math","remote":{"type":"git","url":"git@github.com:chinootes/math.git"},"selfContained":true,"name":"math"},{"fsPath":".","selfContained":true,"name":"cs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://chinootes.github.io","assetsPrefix":"/cs","duplicateNoteBehavior":{"action":"useVault","payload":["math","cs"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}